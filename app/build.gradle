import java.util.regex.Pattern
//apply plugin: 'com.android.model.application'
//apply plugin: 'com.android.application'

apply plugin : 'com.android.application'

//model {
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    
    defaultConfig {
        applicationId "fr.enst.friendshipismagic.app"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1 //getVersionCodeFromManifest()
        versionName "1.0.0"
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi', 'armeabi-v7a'
            universalApk true
        }
    }

    //jni.source.srcDir "../lib
    //jniLibs.srcDirs = ['../libs' ]

    project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 5, 'mips64': 6, 'x86': 8, 'x86_64': 9]

    applicationVariants.all { variant ->
        // assign different version code for each output
        variant.outputs.each { output ->
            output.versionCodeOverride =
                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) * 1000000 + defaultConfig.versionCode
        }
    }

    buildTypes {
        debug {
            jniDebuggable true
        }

        release {
            minifyEnabled false
        }
    }

/*    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        ta
        rgetCompatibility JavaVersion.VERSION_1_8
    }*/
}//}


dependencies {
    //compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':nativeapp')
    //testCompile 'junit:junit:4.12'
    //compile fileTree(include: '*.jar', dir: '../libs')
    //compile fileTree(dir: '../libs', include: '*.so')
}

/*def getVersionCodeFromManifest() {
    def manifestFile = file(android.sourceSets.main.manifest.srcFile)
    def pattern = Pattern.compile("versionCode=\"(\\d+)\"")
    def matcher = pattern.matcher(manifestFile.getText())
    matcher.find()
    return Integer.parseInt(matcher.group(1))
}*/



